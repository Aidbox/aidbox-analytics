services:
  postgres:
    image: postgres:17
    volumes:
    - postgres_data:/var/lib/postgresql/data:delegated
    command:
    - postgres
    - -c
    - shared_preload_libraries=pg_stat_statements
    ports:
    - 5439:5432
    environment:
      POSTGRES_USER: aidbox
      POSTGRES_PORT: '5432'
      POSTGRES_DB: aidbox
      POSTGRES_PASSWORD: HeouW2_XrC
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -d aidbox"]
        interval: 5s
        timeout: 5s
        retries: '90'
        start_period: 30s
  aidbox:
    image: healthsamurai/aidboxone:edge
    pull_policy: always
    depends_on:
    - postgres
    ports:
    - 8080:8080
    environment:
      BOX_ADMIN_PASSWORD: qp5H8JGixm
      BOX_BOOTSTRAP_FHIR_PACKAGES: hl7.fhir.r4.core#4.0.1
      BOX_COMPATIBILITY_VALIDATION_JSON__SCHEMA_REGEX: '#{:fhir-datetime}'
      BOX_DB_DATABASE: aidbox
      BOX_DB_HOST: postgres
      BOX_DB_PASSWORD: HeouW2_XrC
      BOX_DB_PORT: '5432'
      BOX_DB_USER: aidbox
      BOX_FHIR_COMPLIANT_MODE: true
      BOX_FHIR_CORRECT_AIDBOX_FORMAT: true
      BOX_FHIR_CREATEDAT_URL: https://aidbox.app/ex/createdAt
      BOX_FHIR_SCHEMA_VALIDATION: true
      BOX_FHIR_SEARCH_AUTHORIZE_INLINE_REQUESTS: true
      BOX_FHIR_SEARCH_CHAIN_SUBSELECT: true
      BOX_FHIR_SEARCH_COMPARISONS: true
      BOX_FHIR_TERMINOLOGY_SERVICE_BASE_URL: https://tx.health-samurai.io/fhir
      BOX_ROOT_CLIENT_SECRET: k5hlhmOYr4
      BOX_SEARCH_INCLUDE_CONFORMANT: true
      BOX_SECURITY_AUDIT_LOG_ENABLED: true
      BOX_SECURITY_DEV_MODE: true
      BOX_SETTINGS_MODE: read-write
      BOX_WEB_BASE_URL: http://localhost:8080
      BOX_WEB_PORT: 8080
    healthcheck:
      test: curl -f http://localhost:8080/health || exit 1
      interval: 5s
      timeout: 5s
      retries: '90'
      start_period: 30s
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards

    depends_on:
      postgres:
        condition: service_healthy
  jupyter:
    image: jupyter/datascience-notebook:latest
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=aidbox
      - JUPYTER_PASSWORD=aidbox
    entrypoint: ["start-notebook.py", "--IdentityProvider.token=''"]
    depends_on:
      - postgres

volumes:
  postgres_data: {}
  grafana_data: {}